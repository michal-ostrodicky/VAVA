import java.io.EOFException;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.TimeUnit;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import model.Movie;
import model.User;

import com.github.javafaker.Faker;
import com.sun.org.apache.xpath.internal.operations.Mod;

import remotes.MovieManagerRemote;
import remotes.UserManagerRemote;


public class Test {

	public static void main(String[] args) throws NamingException {
	
		Context ctx = createRemoteEjbContext("localhost", "10100");
		
		  
		
		
//		MovieManagerRemote movieManager = (MovieManagerRemote) ctx.lookup("ejb:AATM/Logic/MovieManager!remotes.MovieManagerRemote");
//		
//		
//		
//		
		UserManagerRemote userManager = (UserManagerRemote) ctx.lookup("ejb:AATM/Logic/UserManager!remotes.UserManagerRemote");
		
		
		
		
		int mikiUserId = userManager.login("miki", "123456");
		User miki = userManager.getUser(mikiUserId);
		
		
		
		List<Movie> movies = null;
        try {
            FileInputStream fileIn = new FileInputStream("src/movies.ser");
            ObjectInputStream in = new ObjectInputStream(fileIn);
            movies = (List<Movie>) in.readObject();
            in.close();
            fileIn.close();
        }catch(IOException i) {
        }catch(ClassNotFoundException c) {
            System.out.println("Employee class not found");
        }
        
        System.out.println(movies.size());        
		
		
		
			
	}
	
	private static Context createRemoteEjbContext(String host, String port) throws NamingException {
        Hashtable<Object, Object> props = new Hashtable<>();
        props.put(Context.INITIAL_CONTEXT_FACTORY, "org.jboss.naming.remote.client.InitialContextFactory");
        props.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming");

        props.put("jboss.naming.client.ejb.context", false);
        props.put("org.jboss.ejb.client.scoped.context", true);

        props.put("endpoint.name", "client-endpoint");
        props.put("remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED", false);
        props.put("remote.connections", "default");
        props.put("remote.connection.default.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS", false);

        props.put(Context.PROVIDER_URL, "http-remoting://" + host + ":" + port);
        props.put("remote.connection.default.host", host);
        props.put("remote.connection.default.port", port);

        return new InitialContext(props);
    }
	

}
